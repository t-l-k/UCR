<Window x:Class="HidWizards.UCR.Views.ProfileViews.ProfileWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:HidWizards.UCR.Views.Controls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converter="clr-namespace:HidWizards.UCR.Utilities.Converter"
        mc:Ignorable="d"
        x:Name="ProfileWindowName"
        d:DataContext="{d:DesignData Source=/SampleData/ProfileViewModelSampleData.xaml}"
        Title="{Binding Title}" 
        Height="800" Width="1000"
        MinHeight="600" MinWidth="800"
        ResizeMode="CanResize" 
        BorderBrush="{StaticResource PrimaryHueDarkBrush}"
        BorderThickness="1"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}">
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="5"
            GlassFrameThickness="0"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <ResourceDictionary>
            <converter:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="Save" Executed="Save_OnExecuted" CanExecute="Save_OnCanExecute" />
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <controls:WindowBar Grid.Row="0"/>
        <Grid Grid.Row="1">
            <Border Background="Transparent"
                    BorderBrush="{DynamicResource MaterialDesignShadowBrush}"
                    BorderThickness="0 0 0 1"
                    CornerRadius="2">
                <Border.Effect>
                    <BlurEffect Radius="6"/>
                </Border.Effect>
            </Border>
            <ToolBarTray Style="{DynamicResource MaterialDesignToolBarTray}" IsEnabled="{Binding Source={x:Reference RootDialog}, Path=IsOpen, Converter={StaticResource InverseBooleanConverter}}">
                <ToolBar ToolBarTray.IsLocked="True" Style="{DynamicResource MaterialDesignToolBar}" ClipToBounds="False">
                    <Button ToolTip="Save" Command="Save">
                        <materialDesign:PackIcon Kind="ContentSave"/>
                    </Button>
                    <Separator />
                    <Button IsEnabled="{Binding CanActivateProfile}" ToolTip="Activate profile" Click="ActivateProfile">
                        <StackPanel>
                            <materialDesign:PackIcon Kind="Play"/>
                            <materialDesign:PackIcon Kind="Replay" Visibility="Collapsed"/>
                        </StackPanel>
                    </Button>
                    <Button IsEnabled="{Binding CanDeactivateProfile}" ToolTip="Stop active profile" Click="DeactivateProfile">
                        <materialDesign:PackIcon Kind="Stop"/>
                    </Button>
                    <Separator />
                    <Button ToolTip="Manage device groups" Click="ManageDeviceGroups_OnClick">
                        <materialDesign:PackIcon Kind="GoogleController"/>
                    </Button>
                </ToolBar>
            </ToolBarTray>
        </Grid>

        <materialDesign:DialogHost x:Name="RootDialog" Grid.Row="2" Identifier="ProfileDialog">
            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <GroupBox Header="Mapping">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Padding="5,2,5,2" Margin="5" Click="AddMapping_OnClick">Add</Button>
                            <TextBox Grid.Column="1" Margin="0,5,5,5" x:Name="MappingNameField" KeyDown="MappingNameField_OnKeyDown"></TextBox>
                        </Grid>
                    </GroupBox>

                    <GroupBox Grid.Row="1" Header="Plugin" Margin="5" Padding="5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Padding="5,0,5,0" Click="AddPlugin_OnClick">Add</Button>
                            <ComboBox Grid.Column="1" Name="PluginsComboBox" Margin="5,0,0,0" ></ComboBox>
                        </Grid>
                    </GroupBox>

                    <ListBox Grid.Row="2" Grid.Column="0" Margin="0,10,0,0" x:Name="MappingsListBox"  ItemsSource="{Binding MappingsList}" VirtualizingPanel.IsVirtualizing='True' VerticalAlignment="Stretch"
                         VirtualizingPanel.IsVirtualizingWhenGrouping='True'
                         VirtualizingPanel.ScrollUnit='Pixel'
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.Resources>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Style.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                                </Style.Resources>
                            </Style>
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <controls:MappingControl/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>

                <ListView Grid.Row="0" Grid.Column="1" ItemsSource="{Binding MappingsList}" Margin="0 -8 -8 -8"
                              VirtualizingPanel.ScrollUnit='Pixel'
                              HorizontalContentAlignment="Stretch">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <controls:MappingCardControl/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </materialDesign:DialogHost>
    </Grid>
</Window>
